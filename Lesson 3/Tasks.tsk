// Задача 19 Напишите программу, которая принимает на вход 
// пятизначное число и проверяет, является ли оно палиндромом.

Console.Clear();
Console.Write("Введите число: ");
string number = Console.ReadLine();

void checkNumber(string number){
  if (number[0]==number[4] || number[1]==number[3]){
    Console.WriteLine($"Число: {number} палиндром.");
  }
  else Console.WriteLine($"Число {number}  не палиндром.");
}

if (number!.Length == 5){
  checkNumber (number);
}
else Console.WriteLine($"Введи правильное число");


// Задача 21 Напишите программу, которая принимает на вход 
// координаты двух точек и находит расстояние между ними в 3D пространстве.

Console.Clear();
Console.WriteLine("Введите значение координаты x точки A" );
int xa = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Введите значение координаты y точки A" );
int ya = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Введите значение координаты z точки A" );
int za = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Введите значение координаты x точки B" );
int xb = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Введите значение координаты y точки B" );
int yb = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Введите значение координаты z точки B" );
int zb = Convert.ToInt32(Console.ReadLine());

double result = Math.Sqrt((Math.Pow(xa - xb,2)) + (Math.Pow(ya - yb,2)) + (Math.Pow(za - zb,2)));
Console.WriteLine($"Длинна отрезка:{Math.Round(result,2)}");


// Задача 23 Напишите программу, которая принимает на вход 
// число (N) и выдаёт таблицу кубов чисел от 1 до N.

Console.Clear();
Console.Write("Введите число: ");
int cube = Convert.ToInt32(Console.ReadLine());

void Cube(int[] cube){
  int counter = 0;
  int length = cube.Length;
  while (counter <  length){
    cube[counter] = Convert.ToInt32(Math.Pow(counter, 3));
    counter++;
  }
}

void PrintArry(int[] coll){
  int count = coll.Length;
  int index = 0;
  while(index < count){
    Console.Write(coll[index]+ " ");
    index++;
  }
} 

int[] arry = new int[cube+1];
Cube(arry);
PrintArry(arry);


